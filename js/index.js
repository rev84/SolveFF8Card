// Generated by CoffeeScript 1.10.0
var Card, Field, Utl;

Utl = (function() {
  function Utl() {}

  Utl.numFormat = function(num) {
    return String(num).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1,');
  };

  Utl.rand = function(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
  };

  Utl.adrBar = function(url) {
    return window.history.replaceState('', '', '' + url);
  };

  Utl.normalize = function(num, min, max) {
    var range;
    if (min == null) {
      min = 0;
    }
    if (max == null) {
      max = 1;
    }
    range = Math.abs(max - min);
    if (num < min) {
      num += range * Math.ceil(Math.abs(num - min) / range);
    } else if (max <= num) {
      num -= range * (Math.floor(Math.abs(num - max) / range) + 1);
    }
    return num;
  };

  Utl.time = function(date) {
    if (date == null) {
      date = null;
    }
    if (date === null) {
      date = new Date();
    }
    return Math.floor(+date / 1000);
  };

  Utl.militime = function(date, getAsFloat) {
    if (date == null) {
      date = null;
    }
    if (getAsFloat == null) {
      getAsFloat = false;
    }
    if (date === null) {
      date = new Date();
    }
    return +date / (getAsFloat ? 1000 : 1);
  };

  Utl.dateStr = function(date, dateSep) {
    if (date == null) {
      date = null;
    }
    if (dateSep == null) {
      dateSep = '-';
    }
    if (date === null) {
      date = new Date();
    }
    return '' + this.zerofill(date.getFullYear(), 4) + dateSep + this.zerofill(date.getMonth() + 1, 2) + dateSep + this.zerofill(date.getDate(), 2);
  };

  Utl.datetimeStr = function(date, dateSep, timeSep, betweenSep) {
    if (date == null) {
      date = null;
    }
    if (dateSep == null) {
      dateSep = '-';
    }
    if (timeSep == null) {
      timeSep = ':';
    }
    if (betweenSep == null) {
      betweenSep = ' ';
    }
    if (date === null) {
      date = new Date();
    }
    return this.dateStr(date, dateSep) + betweenSep + this.zerofill(date.getHours(), 2) + timeSep + this.zerofill(date.getMinutes(), 2) + timeSep + this.zerofill(date.getSeconds(), 2);
  };

  Utl.difftime = function(targetDate, baseDate, nowSec, nowStr, agoStr, secStr, minStr, hourStr, dayStr, monStr, yearStr) {
    var baseTime, d, diffTime, h, m, mo, targetTime, y;
    if (baseDate == null) {
      baseDate = null;
    }
    if (nowSec == null) {
      nowSec = 0;
    }
    if (nowStr == null) {
      nowStr = 'ついさっき';
    }
    if (agoStr == null) {
      agoStr = '前';
    }
    if (secStr == null) {
      secStr = '秒';
    }
    if (minStr == null) {
      minStr = '分';
    }
    if (hourStr == null) {
      hourStr = '時間';
    }
    if (dayStr == null) {
      dayStr = '日';
    }
    if (monStr == null) {
      monStr = '月';
    }
    if (yearStr == null) {
      yearStr = '年';
    }
    if (baseDate === null) {
      baseTime = this.time();
    }
    targetTime = this.time(targetDate);
    diffTime = baseTime - targetTime;
    if (diffTime < 0) {
      return null;
    }
    if (nowSec >= diffTime) {
      return nowStr;
    }
    y = Math.floor(diffTime / (60 * 60 * 24 * 30 * 12));
    if (y > 0) {
      return '' + y + yearStr + agoStr;
    }
    diffTime -= y * (60 * 60 * 24 * 30 * 12);
    mo = Math.floor(diffTime / (60 * 60 * 24 * 30));
    if (mo > 0) {
      return '' + mo + monStr + agoStr;
    }
    diffTime -= mo * (60 * 60 * 24 * 30);
    d = Math.floor(diffTime / (60 * 60 * 24));
    if (d > 0) {
      return '' + d + dayStr + agoStr;
    }
    diffTime -= d * (60 * 60 * 24);
    h = Math.floor(diffTime / (60 * 60));
    if (h > 0) {
      return '' + h + hourStr + agoStr;
    }
    diffTime -= h * (60 * 60);
    m = Math.floor(diffTime / 60);
    if (m > 0) {
      return '' + m + minStr + agoStr;
    }
    diffTime -= m * 60;
    if (diffTime > 0) {
      return '' + diffTime + secStr + agoStr;
    }
    return nowStr;
  };

  Utl.zerofill = function(num, digit) {
    return ('' + this.repeat('0', digit) + num).slice(-digit);
  };

  Utl.repeat = function(str, times) {
    return Array(1 + times).join(str);
  };

  Utl.shuffle = function(ary) {
    var i, n, ref;
    n = ary.length;
    while (n) {
      n--;
      i = this.rand(0, n);
      ref = [ary[n], ary[i]], ary[i] = ref[0], ary[n] = ref[1];
    }
    return ary;
  };

  Utl.inArray = function(needle, ary) {
    var j, len, v;
    for (j = 0, len = ary.length; j < len; j++) {
      v = ary[j];
      if (v === needle) {
        return true;
      }
    }
    return false;
  };

  Utl.clone = function(ary) {
    var j, k, len, res, v;
    res = [];
    for (k = j = 0, len = ary.length; j < len; k = ++j) {
      v = ary[k];
      res[k] = v;
    }
    return res;
  };

  Utl.arrayFill = function(length, val) {
    var i, j, ref, res;
    if (val == null) {
      val = null;
    }
    res = [];
    for (i = j = 0, ref = length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      res[i] = val;
    }
    return res;
  };

  Utl.array2dFill = function(x, y, val) {
    var j, o, ref, ref1, res, xx, yAry, yy;
    if (y == null) {
      y = null;
    }
    if (val == null) {
      val = null;
    }
    if (y === null) {
      y = x;
    }
    res = [];
    yAry = [];
    for (yy = j = 0, ref = y; 0 <= ref ? j < ref : j > ref; yy = 0 <= ref ? ++j : --j) {
      yAry[yy] = val;
    }
    for (xx = o = 0, ref1 = x; 0 <= ref1 ? o < ref1 : o > ref1; xx = 0 <= ref1 ? ++o : --o) {
      res[xx] = this.clone(yAry);
    }
    return res;
  };

  Utl.count = function(object) {
    return Object.keys(object).length;
  };

  Utl.uuid = function() {
    var i, j, random, uuid;
    uuid = '';
    for (i = j = 0; j < 32; i = ++j) {
      random = Math.random() * 16 | 0;
      if (i === 8 || i === 12 || i === 16 || i === 20) {
        uuid += '-';
      }
      uuid += (i === 12 ? 4 : (i === 16 ? random & 3 | 8 : random)).toString(16);
    }
    return uuid;
  };

  return Utl;

})();

Card = (function() {
  Card.prototype.cardNum = null;

  Card.prototype.playerNum = null;

  function Card(cardNum1, playerNum) {
    this.cardNum = cardNum1;
    this.setPlayerNum(playerNum);
  }

  Card.prototype.up = function() {
    return this.DATA[this.cardNum].up;
  };

  Card.prototype.left = function() {
    return this.DATA[this.cardNum].left;
  };

  Card.prototype.right = function() {
    return this.DATA[this.cardNum].right;
  };

  Card.prototype.down = function() {
    return this.DATA[this.cardNum].down;
  };

  Card.prototype.lv = function() {
    return this.DATA[this.cardNum].lv;
  };

  Card.prototype.playerNum = function() {
    return this.playerNum;
  };

  Card.prototype.turn = function() {
    return this.playerNum = playerNum === 0 ? 1 : 0;
  };

  Card.prototype.setPlayerNum = function(playerNum) {
    return this.playerNum = playerNum === 0 ? 0 : 1;
  };

  Card.DATA = {
    "1": {
      "lv": 1,
      "name": "\u30cf\u30a6\u30ea\u30b6\u30fc\u30c9",
      "up": 1,
      "left": 5,
      "right": 4,
      "down": 1,
      "elem": 0
    },
    "2": {
      "lv": 1,
      "name": "\u30d5\u30f3\u30b4\u30aa\u30f3\u30b4",
      "up": 5,
      "left": 3,
      "right": 1,
      "down": 1,
      "elem": 0
    },
    "3": {
      "lv": 1,
      "name": "\u30d0\u30a4\u30c8\u30d0\u30b0",
      "up": 1,
      "left": 5,
      "right": 3,
      "down": 3,
      "elem": 0
    },
    "4": {
      "lv": 1,
      "name": "\u30ec\u30c3\u30c9\u30de\u30a6\u30b9",
      "up": 6,
      "left": 2,
      "right": 1,
      "down": 1,
      "elem": 0
    },
    "5": {
      "lv": 1,
      "name": "\u30d7\u30ea\u30cc\u30e9",
      "up": 2,
      "left": 5,
      "right": 3,
      "down": 1,
      "elem": 0
    },
    "6": {
      "lv": 1,
      "name": "\u30b2\u30a4\u30e9",
      "up": 2,
      "left": 4,
      "right": 1,
      "down": 4,
      "elem": 0
    },
    "7": {
      "lv": 1,
      "name": "\u30b2\u30b9\u30d1\u30fc",
      "up": 1,
      "left": 1,
      "right": 5,
      "down": 4,
      "elem": 0
    },
    "8": {
      "lv": 1,
      "name": "\u30d5\u30a9\u30ab\u30ed\u30eb\u30d5\u30a7\u30a4\u30af",
      "up": 3,
      "left": 1,
      "right": 5,
      "down": 2,
      "elem": 0
    },
    "9": {
      "lv": 1,
      "name": "\u30d6\u30e9\u30c3\u30c8\u30bd\u30a6\u30eb",
      "up": 2,
      "left": 1,
      "right": 1,
      "down": 6,
      "elem": 0
    },
    "10": {
      "lv": 1,
      "name": "\u30b1\u30c0\u30c1\u30af",
      "up": 4,
      "left": 3,
      "right": 2,
      "down": 4,
      "elem": 0
    },
    "11": {
      "lv": 1,
      "name": "\u30b3\u30ab\u30c8\u30ea\u30b9",
      "up": 2,
      "left": 6,
      "right": 1,
      "down": 2,
      "elem": 0
    },
    "12": {
      "lv": 2,
      "name": "\u30b0\u30e9\u30c3\u30c8",
      "up": 7,
      "left": 1,
      "right": 1,
      "down": 3,
      "elem": 0
    },
    "13": {
      "lv": 2,
      "name": "\u30d6\u30a8\u30eb",
      "up": 6,
      "left": 3,
      "right": 2,
      "down": 2,
      "elem": 0
    },
    "14": {
      "lv": 2,
      "name": "\u30e1\u30ba\u30de\u30e9\u30a4\u30ba",
      "up": 5,
      "left": 4,
      "right": 3,
      "down": 3,
      "elem": 0
    },
    "15": {
      "lv": 2,
      "name": "\u30b0\u30d8\u30a4\u30b9\u30a2\u30a4",
      "up": 6,
      "left": 3,
      "right": 1,
      "down": 4,
      "elem": 0
    },
    "16": {
      "lv": 2,
      "name": "\u30d9\u30eb\u30d8\u30eb\u30e1\u30eb\u30d8\u30eb",
      "up": 3,
      "left": 3,
      "right": 4,
      "down": 5,
      "elem": 0
    },
    "17": {
      "lv": 2,
      "name": "\u30b9\u30e9\u30b9\u30c8\u30a8\u30a4\u30d3\u30b9",
      "up": 5,
      "left": 5,
      "right": 3,
      "down": 2,
      "elem": 0
    },
    "18": {
      "lv": 2,
      "name": "\u30d8\u30c3\u30b8\u30f4\u30a1\u30a4\u30d1\u30fc",
      "up": 5,
      "left": 5,
      "right": 1,
      "down": 3,
      "elem": 0
    },
    "19": {
      "lv": 2,
      "name": "\u30af\u30ea\u30fc\u30d7\u30b9",
      "up": 5,
      "left": 2,
      "right": 2,
      "down": 5,
      "elem": 0
    },
    "20": {
      "lv": 2,
      "name": "\u30b0\u30ec\u30f3\u30c7\u30eb",
      "up": 4,
      "left": 2,
      "right": 4,
      "down": 5,
      "elem": 0
    },
    "21": {
      "lv": 2,
      "name": "\u30c0\u30d6\u30eb\u30cf\u30ac\u30fc",
      "up": 3,
      "left": 7,
      "right": 2,
      "down": 1,
      "elem": 0
    },
    "22": {
      "lv": 2,
      "name": "\u30b0\u30e9\u30f3\u30c7\u30a2\u30fc\u30ed",
      "up": 5,
      "left": 3,
      "right": 2,
      "down": 5,
      "elem": 0
    },
    "23": {
      "lv": 3,
      "name": "\u30e9\u30a4\u30d5\u30d5\u30a9\u30d3\u30c9\u30f3",
      "up": 6,
      "left": 2,
      "right": 6,
      "down": 3,
      "elem": 0
    },
    "24": {
      "lv": 3,
      "name": "\u30a8\u30b5\u30f3\u30b9\u30fc\u30b7",
      "up": 6,
      "left": 6,
      "right": 3,
      "down": 1,
      "elem": 0
    },
    "25": {
      "lv": 3,
      "name": "\u30c8\u30e9\u30a4\u30d5\u30a7\u30a4\u30b9",
      "up": 3,
      "left": 5,
      "right": 5,
      "down": 5,
      "elem": 0
    },
    "26": {
      "lv": 3,
      "name": "\u30d5\u30a9\u30ab\u30ed\u30eb",
      "up": 7,
      "left": 3,
      "right": 5,
      "down": 1,
      "elem": 0
    },
    "27": {
      "lv": 3,
      "name": "\u30b4\u30fc\u30b8\u30e5\u30b7\u30fc\u30eb",
      "up": 7,
      "left": 3,
      "right": 1,
      "down": 5,
      "elem": 0
    },
    "28": {
      "lv": 3,
      "name": "\u30aa\u30c1\u30e5\u30fc",
      "up": 5,
      "left": 3,
      "right": 6,
      "down": 3,
      "elem": 0
    },
    "29": {
      "lv": 3,
      "name": "SAM08G",
      "up": 5,
      "left": 4,
      "right": 6,
      "down": 2,
      "elem": 0
    },
    "30": {
      "lv": 3,
      "name": "\u30ef\u30a4\u30eb\u30c9\u30d5\u30c3\u30af",
      "up": 4,
      "left": 2,
      "right": 4,
      "down": 7,
      "elem": 0
    },
    "31": {
      "lv": 3,
      "name": "\u30b5\u30dc\u30c6\u30f3\u30c0\u30fc",
      "up": 6,
      "left": 3,
      "right": 2,
      "down": 6,
      "elem": 0
    },
    "32": {
      "lv": 3,
      "name": "\u30c8\u30f3\u30d9\u30ea",
      "up": 3,
      "left": 4,
      "right": 6,
      "down": 4,
      "elem": 0
    },
    "33": {
      "lv": 3,
      "name": "\u30a2\u30d3\u30b9\u30a6\u30a9\u30fc\u30e0",
      "up": 7,
      "left": 5,
      "right": 2,
      "down": 3,
      "elem": 0
    },
    "34": {
      "lv": 4,
      "name": "\u30b0\u30e9\u30ca\u30c8\u30a5\u30e0",
      "up": 2,
      "left": 7,
      "right": 3,
      "down": 6,
      "elem": 0
    },
    "35": {
      "lv": 4,
      "name": "\u30d0\u30a4\u30bb\u30fc\u30b8\u30fb\u30cf\u30f3\u30ba",
      "up": 6,
      "left": 5,
      "right": 5,
      "down": 4,
      "elem": 0
    },
    "36": {
      "lv": 4,
      "name": "\u30a2\u30eb\u30b1\u30aa\u30c0\u30a4\u30ce\u30b9",
      "up": 4,
      "left": 7,
      "right": 6,
      "down": 2,
      "elem": 0
    },
    "37": {
      "lv": 4,
      "name": "\u30dc\u30e0",
      "up": 2,
      "left": 3,
      "right": 7,
      "down": 6,
      "elem": 0
    },
    "38": {
      "lv": 4,
      "name": "\u30d6\u30ea\u30c3\u30c4",
      "up": 1,
      "left": 7,
      "right": 6,
      "down": 4,
      "elem": 0
    },
    "39": {
      "lv": 4,
      "name": "\u30a6\u30a7\u30f3\u30c7\u30a3\u30b4",
      "up": 7,
      "left": 6,
      "right": 3,
      "down": 1,
      "elem": 0
    },
    "40": {
      "lv": 4,
      "name": "\u30af\u30a2\u30fc\u30eb",
      "up": 7,
      "left": 4,
      "right": 4,
      "down": 4,
      "elem": 0
    },
    "41": {
      "lv": 4,
      "name": "\u30ac\u30eb\u30ad\u30de\u30bb\u30e9",
      "up": 3,
      "left": 6,
      "right": 7,
      "down": 3,
      "elem": 0
    },
    "42": {
      "lv": 4,
      "name": "\u30c9\u30e9\u30b4\u30f3\u30a4\u30be\u30eb\u30c7",
      "up": 6,
      "left": 3,
      "right": 2,
      "down": 7,
      "elem": 0
    },
    "43": {
      "lv": 4,
      "name": "\u30a2\u30c0\u30de\u30f3\u30bf\u30a4\u30de\u30a4",
      "up": 4,
      "left": 6,
      "right": 5,
      "down": 5,
      "elem": 0
    },
    "44": {
      "lv": 4,
      "name": "\u30e1\u30eb\u30c8\u30c9\u30e9\u30b4\u30f3",
      "up": 7,
      "left": 3,
      "right": 5,
      "down": 4,
      "elem": 0
    },
    "45": {
      "lv": 5,
      "name": "\u9244\u5de8\u4eba",
      "up": 6,
      "left": 5,
      "right": 5,
      "down": 6,
      "elem": 0
    },
    "46": {
      "lv": 5,
      "name": "\u30d9\u30d2\u30fc\u30e2\u30b9",
      "up": 3,
      "left": 7,
      "right": 6,
      "down": 5,
      "elem": 0
    },
    "47": {
      "lv": 5,
      "name": "\u30ad\u30de\u30a4\u30e9\u30d6\u30ec\u30a4\u30f3",
      "up": 7,
      "left": 3,
      "right": 6,
      "down": 5,
      "elem": 0
    },
    "48": {
      "lv": 5,
      "name": "\u30b3\u30e8\u30b3\u30e8",
      "up": 3,
      "left": 1,
      "right": 10,
      "down": 2,
      "elem": 0
    },
    "49": {
      "lv": 5,
      "name": "\u30a4\u30f3\u30d3\u30f3\u30b7\u30d6\u30eb",
      "up": 6,
      "left": 7,
      "right": 2,
      "down": 6,
      "elem": 0
    },
    "50": {
      "lv": 5,
      "name": "GIM47N",
      "up": 5,
      "left": 4,
      "right": 5,
      "down": 7,
      "elem": 0
    },
    "51": {
      "lv": 5,
      "name": "\u30e2\u30eb\u30dc\u30eb",
      "up": 7,
      "left": 2,
      "right": 7,
      "down": 4,
      "elem": 0
    },
    "52": {
      "lv": 5,
      "name": "\u30eb\u30d6\u30eb\u30e0\u30c9\u30e9\u30b4\u30f3",
      "up": 7,
      "left": 4,
      "right": 2,
      "down": 7,
      "elem": 0
    },
    "53": {
      "lv": 5,
      "name": "\u30a8\u30eb\u30ce\u30fc\u30a4\u30eb",
      "up": 5,
      "left": 6,
      "right": 3,
      "down": 7,
      "elem": 0
    },
    "54": {
      "lv": 5,
      "name": "\u30c8\u30f3\u30d9\u30ea\u30ad\u30f3\u30b0",
      "up": 4,
      "left": 4,
      "right": 6,
      "down": 7,
      "elem": 0
    },
    "55": {
      "lv": 5,
      "name": "\u30a6\u30a7\u30c3\u30b8\u30fb\u30d3\u30c3\u30b0\u30b9",
      "up": 6,
      "left": 7,
      "right": 6,
      "down": 2,
      "elem": 0
    },
    "56": {
      "lv": 6,
      "name": "\u98a8\u795e\u30fb\u96f7\u795e",
      "up": 2,
      "left": 4,
      "right": 8,
      "down": 8,
      "elem": 0
    },
    "57": {
      "lv": 6,
      "name": "\u30a8\u30eb\u30f4\u30a3\u30aa\u30ec",
      "up": 7,
      "left": 4,
      "right": 8,
      "down": 3,
      "elem": 0
    },
    "58": {
      "lv": 6,
      "name": "X-ATM092",
      "up": 4,
      "left": 3,
      "right": 8,
      "down": 7,
      "elem": 0
    },
    "59": {
      "lv": 6,
      "name": "\u30b0\u30e9\u30ca\u30eb\u30c9",
      "up": 7,
      "left": 5,
      "right": 2,
      "down": 8,
      "elem": 0
    },
    "60": {
      "lv": 6,
      "name": "\u30ca\u30e0\u30bf\u30eb\u30fb\u30a6\u30c8\u30af",
      "up": 1,
      "left": 3,
      "right": 8,
      "down": 8,
      "elem": 0
    },
    "61": {
      "lv": 6,
      "name": "\u30b7\u30e5\u30e1\u30eb\u30b1",
      "up": 8,
      "left": 2,
      "right": 2,
      "down": 8,
      "elem": 0
    },
    "62": {
      "lv": 6,
      "name": "\u30a2\u30d0\u30c9\u30f3",
      "up": 6,
      "left": 5,
      "right": 8,
      "down": 4,
      "elem": 0
    },
    "63": {
      "lv": 6,
      "name": "\u30c9\u30eb\u30e1\u30f3",
      "up": 4,
      "left": 6,
      "right": 8,
      "down": 5,
      "elem": 0
    },
    "64": {
      "lv": 6,
      "name": "\u30aa\u30a4\u30eb\u30b7\u30c3\u30d1\u30fc",
      "up": 1,
      "left": 8,
      "right": 8,
      "down": 4,
      "elem": 0
    },
    "65": {
      "lv": 6,
      "name": "\u30b7\u30e5\u30df\u65cf",
      "up": 6,
      "left": 4,
      "right": 5,
      "down": 8,
      "elem": 0
    },
    "66": {
      "lv": 6,
      "name": "\u30b3\u30ad\u30e5\u30fc\u30c8\u30b9",
      "up": 7,
      "left": 1,
      "right": 5,
      "down": 8,
      "elem": 0
    },
    "67": {
      "lv": 7,
      "name": "\u30d7\u30ed\u30d0\u30b2\u30fc\u30bf\u30fc",
      "up": 8,
      "left": 8,
      "right": 4,
      "down": 4,
      "elem": 0
    },
    "68": {
      "lv": 7,
      "name": "\u30b8\u30e3\u30dc\u30c6\u30f3\u30c0\u30fc",
      "up": 8,
      "left": 4,
      "right": 8,
      "down": 4,
      "elem": 0
    },
    "69": {
      "lv": 7,
      "name": "\u30c8\u30e9\u30a4\u30a8\u30c3\u30b8",
      "up": 8,
      "left": 8,
      "right": 5,
      "down": 2,
      "elem": 0
    },
    "70": {
      "lv": 7,
      "name": "\u30ac\u30eb\u30ac\u30f3\u30c1\u30e5\u30a2",
      "up": 5,
      "left": 8,
      "right": 6,
      "down": 6,
      "elem": 0
    },
    "71": {
      "lv": 7,
      "name": "\u6a5f\u52d5\u5175\u56688\u578bBIS",
      "up": 8,
      "left": 3,
      "right": 6,
      "down": 7,
      "elem": 0
    },
    "72": {
      "lv": 7,
      "name": "\u30a2\u30f3\u30c9\u30ed",
      "up": 8,
      "left": 8,
      "right": 3,
      "down": 5,
      "elem": 0
    },
    "73": {
      "lv": 7,
      "name": "\u30c6\u30a3\u30a2\u30de\u30c8",
      "up": 8,
      "left": 4,
      "right": 8,
      "down": 5,
      "elem": 0
    },
    "74": {
      "lv": 7,
      "name": "BGH251F2",
      "up": 5,
      "left": 5,
      "right": 7,
      "down": 8,
      "elem": 0
    },
    "75": {
      "lv": 7,
      "name": "\u30a6\u30eb\u30d5\u30e9\u30de\u30a4\u30bf\u30fc",
      "up": 6,
      "left": 7,
      "right": 8,
      "down": 4,
      "elem": 0
    },
    "76": {
      "lv": 7,
      "name": "\u30ab\u30c8\u30d6\u30ec\u30d1\u30b9",
      "up": 1,
      "left": 7,
      "right": 8,
      "down": 7,
      "elem": 0
    },
    "77": {
      "lv": 7,
      "name": "\u30a2\u30eb\u30c6\u30de\u30a6\u30a7\u30dd\u30f3",
      "up": 7,
      "left": 8,
      "right": 7,
      "down": 2,
      "elem": 0
    },
    "78": {
      "lv": 8,
      "name": "\u30c7\u30d6\u30c1\u30e7\u30b3\u30dc",
      "up": 4,
      "left": 9,
      "right": 4,
      "down": 8,
      "elem": 0
    },
    "79": {
      "lv": 8,
      "name": "\u30a2\u30f3\u30b8\u30a7\u30ed",
      "up": 9,
      "left": 3,
      "right": 6,
      "down": 7,
      "elem": 0
    },
    "80": {
      "lv": 8,
      "name": "\u30ae\u30eb\u30ac\u30e1\u30c3\u30b7\u30e5",
      "up": 3,
      "left": 6,
      "right": 7,
      "down": 9,
      "elem": 0
    },
    "81": {
      "lv": 8,
      "name": "\u30b3\u30e2\u30fc\u30b0\u30ea",
      "up": 9,
      "left": 2,
      "right": 3,
      "down": 9,
      "elem": 0
    },
    "82": {
      "lv": 8,
      "name": "\u30b3\u30c1\u30e7\u30b3\u30dc",
      "up": 9,
      "left": 4,
      "right": 4,
      "down": 8,
      "elem": 0
    },
    "83": {
      "lv": 8,
      "name": "\u30b1\u30c4\u30a1\u30af\u30a6\u30a1\u30c8\u30eb",
      "up": 2,
      "left": 4,
      "right": 9,
      "down": 9,
      "elem": 0
    },
    "84": {
      "lv": 8,
      "name": "\u30b7\u30f4\u30a1",
      "up": 6,
      "left": 9,
      "right": 7,
      "down": 4,
      "elem": 0
    },
    "85": {
      "lv": 8,
      "name": "\u30a4\u30d5\u30ea\u30fc\u30c8",
      "up": 9,
      "left": 8,
      "right": 6,
      "down": 2,
      "elem": 0
    },
    "86": {
      "lv": 8,
      "name": "\u30bb\u30a4\u30ec\u30fc\u30f3",
      "up": 8,
      "left": 2,
      "right": 9,
      "down": 6,
      "elem": 0
    },
    "87": {
      "lv": 8,
      "name": "\u30bb\u30af\u30c8\u30c8",
      "up": 5,
      "left": 9,
      "right": 1,
      "down": 9,
      "elem": 0
    },
    "88": {
      "lv": 8,
      "name": "\u30df\u30ce\u30bf\u30a6\u30ed\u30b9",
      "up": 9,
      "left": 9,
      "right": 5,
      "down": 2,
      "elem": 0
    },
    "89": {
      "lv": 9,
      "name": "\u30ab\u30fc\u30d0\u30f3\u30af\u30eb",
      "up": 8,
      "left": 4,
      "right": 4,
      "down": 10,
      "elem": 0
    },
    "90": {
      "lv": 9,
      "name": "\u30c7\u30a3\u30a2\u30dc\u30ed\u30b9",
      "up": 5,
      "left": 3,
      "right": 10,
      "down": 8,
      "elem": 0
    },
    "91": {
      "lv": 9,
      "name": "\u30ea\u30f4\u30a1\u30a4\u30a2\u30b5\u30f3",
      "up": 7,
      "left": 7,
      "right": 10,
      "down": 1,
      "elem": 0
    },
    "92": {
      "lv": 9,
      "name": "\u30aa\u30fc\u30c7\u30a3\u30f3",
      "up": 8,
      "left": 5,
      "right": 10,
      "down": 3,
      "elem": 0
    },
    "93": {
      "lv": 9,
      "name": "\u30d1\u30f3\u30c7\u30e2\u30cb\u30a6\u30e0",
      "up": 10,
      "left": 7,
      "right": 1,
      "down": 7,
      "elem": 0
    },
    "94": {
      "lv": 9,
      "name": "\u30b1\u30eb\u30d9\u30ed\u30b9",
      "up": 7,
      "left": 10,
      "right": 4,
      "down": 6,
      "elem": 0
    },
    "95": {
      "lv": 9,
      "name": "\u30a2\u30ec\u30af\u30b5\u30f3\u30c0\u30fc",
      "up": 9,
      "left": 2,
      "right": 10,
      "down": 4,
      "elem": 0
    },
    "96": {
      "lv": 9,
      "name": "\u30d5\u30a7\u30cb\u30c3\u30af\u30b9",
      "up": 7,
      "left": 10,
      "right": 2,
      "down": 7,
      "elem": 0
    },
    "97": {
      "lv": 9,
      "name": "\u30d0\u30cf\u30e0\u30fc\u30c8",
      "up": 10,
      "left": 6,
      "right": 8,
      "down": 2,
      "elem": 0
    },
    "98": {
      "lv": 9,
      "name": "\u30b0\u30e9\u30b7\u30e3\u30e9\u30dc\u30e9\u30b9",
      "up": 3,
      "left": 10,
      "right": 1,
      "down": 10,
      "elem": 0
    },
    "99": {
      "lv": 9,
      "name": "\u30a8\u30c7\u30f3",
      "up": 4,
      "left": 10,
      "right": 4,
      "down": 9,
      "elem": 0
    },
    "100": {
      "lv": 10,
      "name": "\u30a6\u30a9\u30fc\u30c9",
      "up": 10,
      "left": 8,
      "right": 7,
      "down": 2,
      "elem": 0
    },
    "101": {
      "lv": 10,
      "name": "\u30ad\u30ed\u30b9",
      "up": 6,
      "left": 10,
      "right": 7,
      "down": 6,
      "elem": 0
    },
    "102": {
      "lv": 10,
      "name": "\u30e9\u30b0\u30ca",
      "up": 5,
      "left": 9,
      "right": 10,
      "down": 3,
      "elem": 0
    },
    "103": {
      "lv": 10,
      "name": "\u30bb\u30eb\u30d5\u30a3",
      "up": 10,
      "left": 4,
      "right": 8,
      "down": 6,
      "elem": 0
    },
    "104": {
      "lv": 10,
      "name": "\u30ad\u30b9\u30c6\u30a3\u30b9",
      "up": 9,
      "left": 2,
      "right": 6,
      "down": 10,
      "elem": 0
    },
    "105": {
      "lv": 10,
      "name": "\u30a2\u30fc\u30f4\u30a1\u30a4\u30f3",
      "up": 2,
      "left": 10,
      "right": 6,
      "down": 9,
      "elem": 0
    },
    "106": {
      "lv": 10,
      "name": "\u30bc\u30eb",
      "up": 8,
      "left": 6,
      "right": 5,
      "down": 10,
      "elem": 0
    },
    "107": {
      "lv": 10,
      "name": "\u30ea\u30ce\u30a2",
      "up": 4,
      "left": 10,
      "right": 10,
      "down": 2,
      "elem": 0
    },
    "108": {
      "lv": 10,
      "name": "\u30a4\u30c7\u30a2",
      "up": 10,
      "left": 3,
      "right": 10,
      "down": 3,
      "elem": 0
    },
    "109": {
      "lv": 10,
      "name": "\u30b5\u30a4\u30d5\u30a1\u30fc",
      "up": 6,
      "left": 4,
      "right": 9,
      "down": 10,
      "elem": 0
    },
    "110": {
      "lv": 10,
      "name": "\u30b9\u30b3\u30fc\u30eb",
      "up": 10,
      "left": 9,
      "right": 4,
      "down": 6,
      "elem": 0
    },
    "999": {
      "lv": 99,
      "name": "\u58c1",
      "up": 10,
      "left": 10,
      "right": 10,
      "down": 0,
      "elem": 0
    }
  };

  return Card;

})();

Field = (function() {
  Field.prototype.fieldCards = [];

  function Field(fieldCardArray, isSame, isPlus, isWallSame) {
    var card, cardNum, j, len, playerNum;
    this.isSame = isSame;
    this.isPlus = isPlus;
    this.isWallSame = isWallSame;
    for (j = 0, len = FieldCardArray.length; j < len; j++) {
      card = FieldCardArray[j];
      if (card === null) {
        this.fieldCards.push(null);
      } else {
        cardNum = card[0], playerNum = card[1];
        this.fieldCards.push(new Card(cardNum, playerNum));
      }
    }
  }

  Field.prototype.getCard = function(index) {
    if (!((0 <= index && index <= 9))) {
      if (this.isWallSame) {
        return new Card(999, 0);
      } else {
        return null;
      }
    }
    return this.fieldCards[index];
  };

  Field.prototype.getPoint = function() {
    var card, j, len, point, ref;
    point = 0;
    ref = this.fieldCards;
    for (j = 0, len = ref.length; j < len; j++) {
      card = ref[j];
      if (card === null) {
        continue;
      }
      if (card.playerNum() === 0) {
        point++;
      } else {
        point--;
      }
    }
    return point;
  };

  Field.prototype.put = function(index, cardNum, playerNum) {
    var ary, card, d, dir, dir2, doTurn, isTurn, j, key, key2, l, len, len1, myDir, myDir2, myTotal, o, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, ref6, results, s, sameAry, targetDir, targetDir2, targetObj, targetObj2, u, v, x, y;
    x = index % 3;
    y = Math.floor(index / 3);
    u = this.getCard(index - 3);
    l = x === 0 ? new Card(999, 0) : this.getCard(index - 1);
    r = x === 2 ? new Card(999, 0) : this.getCard(index + 1);
    d = this.getCard(index + 3);
    card = new Card(cardNum, playerNum);
    isTurn = {
      u: false,
      l: false,
      r: false,
      d: false
    };
    if (u !== null) {
      if (u.down() < card.up()) {
        isTurn.u = true;
      }
    }
    if (l !== null) {
      if (l.right() < card.left()) {
        isTurn.l = true;
      }
    }
    if (r !== null) {
      if (r.left() < card.right()) {
        isTurn.r = true;
      }
    }
    if (d !== null) {
      if (d.up() < card.down()) {
        isTurn.d = true;
      }
    }
    if (this.isPlus) {
      ary = [[u, 'u', 'down', 'up'], [l, 'l', 'right', 'left'], [r, 'r', 'left', 'right'], [d, 'd', 'up', 'down']];
      for (key = j = 0, ref = ary.length; 0 <= ref ? j < ref : j > ref; key = 0 <= ref ? ++j : --j) {
        if (ary[key] === null) {
          continue;
        }
        ref1 = ary[key], targetObj = ref1[0], dir = ref1[1], targetDir = ref1[2], myDir = ref1[3];
        myTotal = targetObj[targetDir]() + card[myDir]();
        for (key2 = o = ref2 = key + 1, ref3 = ary.length; ref2 <= ref3 ? o < ref3 : o > ref3; key2 = ref2 <= ref3 ? ++o : --o) {
          if (ary[key2] === null) {
            continue;
          }
          ref4 = ary[key], targetObj2 = ref4[0], dir2 = ref4[1], targetDir2 = ref4[2], myDir2 = ref4[3];
          if (myTotal === (targetObj2[targetDir2]() + card[myDir2]())) {
            isTurn[dir] = isTurn[dir2] = true;
          }
        }
      }
    }
    if (this.isSame || this.isWallSame) {
      ary = [[u, 'u', 'down', 'up'], [l, 'l', 'right', 'left'], [r, 'r', 'left', 'right'], [d, 'd', 'up', 'down']];
      sameAry = [];
      for (key = p = 0, ref5 = ary.length; 0 <= ref5 ? p < ref5 : p > ref5; key = 0 <= ref5 ? ++p : --p) {
        if (ary[key] === null) {
          continue;
        }
        ref6 = ary[key], targetObj = ref6[0], dir = ref6[1], targetDir = ref6[2], myDir = ref6[3];
        if (targetObj[targetDir]() === card[myDir]()) {
          sameAry.push(key);
        }
      }
      if (sameAry.length >= 2) {
        for (q = 0, len = ary.length; q < len; q++) {
          v = ary[q];
          targetObj = v[0], dir = v[1], targetDir = v[2], myDir = v[3];
          isTurn[dir] = true;
        }
      }
    }
    results = [];
    for (dir = s = 0, len1 = isTurn.length; s < len1; dir = ++s) {
      doTurn = isTurn[dir];
      ary = {
        u: u,
        l: l,
        r: r,
        d: d
      };
      if (doTurn) {
        results.push(ary[dir].setPlayerNum(playerNum));
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  return Field;

})();
